{
    "swagger": "2.0",
    "info": {
        "title": "CAS API",
        "description": "Get Information From CAS",
        "version": "1.0.0"
    },
    "host": "cas.example.com",
    "schemes": [
        "https",
        "http"
    ],
    "basePath": "/",
    "produces": [
        "application/json",
        "image/jpeg"
    ],
    "paths": {
        "/public/users/avatar/:username(.+)": {
            "get": {
                "summary": "Get User Avatar",
                "description": "The endpoint returns avatar about specifed username\n",
                "tags": [
                    "User",
                    "Public"
                ],
                "responses": {
                    "200": {
                        "description": "avatar of username",
                        "schema": {
                          "type": "string",
                        },
                    },
                }
            }
        },
        "/public/users/key/:username(.+)": {
            "get": {
                "summary": "Get User Public Key",
                "description": "The endpoint returns public key about specifed username\n",
                "tags": [
                    "User",
                    "Public"
                ],
                "responses": {
                    "200": {
                        "description": "public key of username",
                        "schema": {
                            "type": "string",
                        }
                    },
                }
            }
        },
        "/public/users/login": {
            "post": {
                "summary": "Login User",
                "description": "The endpoint check whether username password is right\n",
                "tags": [
                    "User",
                    "Public"
                ],
                "parameters": [
                {
                    "name": "username",
                    "in": "formData",
                    "description": "user username",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "password",
                    "in": "formData",
                    "description": "user password",
                    "required": false,
                    "type": "string",
                },
                {
                    "name": "dynamic",
                    "in": "formData",
                    "description": "user google authorization code",
                    "required": false,
                    "type": "string",
                },
                {
                    "name": "staticdynamic",
                    "in": "formData",
                    "description": "user username + google authorization code",
                    "required": false,
                    "type": "string",
                },
                {
                    "name": "persistence",
                    "in": "formData",
                    "description": "save cookie",
                    "required": false,
                    "type": "string",
                }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        },
        "/public/users/logout": {
            "post": {
                "summary": "destory user cookie session",
                "description": "The endpoint destroy user session by specifed cookie",
                "tags": [
                    "Public", "User"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        },
        "/public/users/ssh/login": {
            "post": {
                "summary": "check user by ssh pubilc private key",
                "description": "The endpoint check user by key",
                "tags": [
                    "Public", "User"
                ],
                "parameters": [
                {
                    "name": "username",
                    "in": "formData",
                    "description": "user username",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "hash",
                    "in": "formData",
                    "description": "hash algo",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "signature",
                    "in": "formData",
                    "description": "signatured text by private key",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "clear",
                    "in": "formData",
                    "description": "clear text",
                    "required": true,
                    "type": "string",
                },
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        },
        "/public/users/md5/login": {
            "post": {
                "summary": "login user by md5",
                "description": "The endpoint check whether username password is right\n",
                "tags": [
                    "User",
                    "Public"
                ],
                "parameters": [
                {
                    "name": "username",
                    "in": "formData",
                    "description": "user username",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "password",
                    "in": "formData",
                    "description": "user md5 password",
                    "required": false,
                    "type": "string",
                },
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        },
        "/public/oauth/onetime": {
            "post": {
              "summary": "check user username and password",
              "description": "The endpoint return oatuch callback\n",
              "tags": [
                "Oauth",
                "Public"
              ],
              "parameters": [
                {
                    "name": "name",
                    "in": "formData",
                    "description": "oauth name",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "debug",
                    "in": "formData",
                    "description": "debug mode",
                    "required": false,
                    "type": "string",
                },
                {
                    "name": "username",
                    "in": "formData",
                    "description": "user username",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "password",
                    "in": "formData",
                    "description": "user password",
                    "required": false,
                    "type": "string",
                },
              ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        },
        "/public/oauth/authorize": {
            "get": {
                "summary": "get callback for oauth address",
                "description": "The endpoint return oauth callback\n",
                "tags": [
                    "Oauth",
                    "Public"
                ],
                "parameters":[
                {
                  "name": "name",
                  "in": "query",
                  "required": true,
                  "type": "string",
                }
                ],
                "responses": {
                  "200": {
                    "description": "user oauth authorization page",
                  }
                }
            },
            "post": {
                "summary": "get callback for oauth address",
                "description": "The endpoint return oauth callback\n",
                "tags": [
                    "Oauth",
                    "Public"
                ],
                "parameters": [
                {
                    "name": "name",
                    "in": "formData",
                    "description": "oauth name",
                    "required": true,
                    "type": "string",
                },
                {
                    "name": "debug",
                    "in": "formData",
                    "description": "debug mode",
                    "required": false,
                    "type": "string",
                },
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        },
        "/oauth/users/": {
            "get": {
                "summary": "get users for oauth",
                "description": "The endpoint return users",
                "tags": [
                    "Oauth",
                    "Public"
                ],
                "parameters": [
                {
                    "name": "keyword",
                    "in": "formData",
                    "description": "username keyword",
                    "required": false,
                    "type": "string",
                },
                {
                    "name": "is_delete[]",
                    "in": "formData",
                    "description": "filter user by is_delete status",
                    "required": false,
                    "type": "string",
                },
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Return"
                        }
                    },
                }
            }
        }
    },
    "definitions": {
        "Return": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "msg": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
    }
}
